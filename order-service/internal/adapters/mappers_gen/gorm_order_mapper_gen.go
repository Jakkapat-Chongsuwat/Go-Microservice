// Code generated by github.com/jmattheis/goverter, DO NOT EDIT.
//go:build !goverter

package mappersgen

import (
	mappers "order-service/internal/adapters/mappers"
	models "order-service/internal/adapters/models"
	domain "order-service/internal/domain"
)

type ConverterImpl struct{}

func (c *ConverterImpl) DomainToGorm(source domain.Order) models.GormDBOrder {
	var modelsGormDBOrder models.GormDBOrder
	modelsGormDBOrder.ID = source.ID
	modelsGormDBOrder.UserID = source.UserID
	modelsGormDBOrder.Status = mappers.OrderStatusToString(source.Status)
	if source.Items != nil {
		modelsGormDBOrder.Items = make([]*models.GormDBOrderItem, len(source.Items))
		for i := 0; i < len(source.Items); i++ {
			modelsGormDBOrder.Items[i] = c.pDomainOrderItemToPModelsGormDBOrderItem(source.Items[i])
		}
	}
	return modelsGormDBOrder
}
func (c *ConverterImpl) DomainToGormOrderItem(source domain.OrderItem) models.GormDBOrderItem {
	var modelsGormDBOrderItem models.GormDBOrderItem
	modelsGormDBOrderItem.ID = source.ID
	modelsGormDBOrderItem.OrderID = source.OrderID
	modelsGormDBOrderItem.ProductID = source.ProductID
	modelsGormDBOrderItem.Quantity = source.Quantity
	return modelsGormDBOrderItem
}
func (c *ConverterImpl) GormToDomain(source models.GormDBOrder) domain.Order {
	var domainOrder domain.Order
	domainOrder.ID = source.ID
	domainOrder.UserID = source.UserID
	domainOrder.Status = mappers.StringToOrderStatus(source.Status)
	if source.Items != nil {
		domainOrder.Items = make([]*domain.OrderItem, len(source.Items))
		for i := 0; i < len(source.Items); i++ {
			domainOrder.Items[i] = c.pModelsGormDBOrderItemToPDomainOrderItem(source.Items[i])
		}
	}
	return domainOrder
}
func (c *ConverterImpl) GormToDomainOrderItem(source models.GormDBOrderItem) domain.OrderItem {
	var domainOrderItem domain.OrderItem
	domainOrderItem.ID = source.ID
	domainOrderItem.OrderID = source.OrderID
	domainOrderItem.ProductID = source.ProductID
	domainOrderItem.Quantity = source.Quantity
	return domainOrderItem
}
func (c *ConverterImpl) pDomainOrderItemToPModelsGormDBOrderItem(source *domain.OrderItem) *models.GormDBOrderItem {
	var pModelsGormDBOrderItem *models.GormDBOrderItem
	if source != nil {
		modelsGormDBOrderItem := c.DomainToGormOrderItem((*source))
		pModelsGormDBOrderItem = &modelsGormDBOrderItem
	}
	return pModelsGormDBOrderItem
}
func (c *ConverterImpl) pModelsGormDBOrderItemToPDomainOrderItem(source *models.GormDBOrderItem) *domain.OrderItem {
	var pDomainOrderItem *domain.OrderItem
	if source != nil {
		domainOrderItem := c.GormToDomainOrderItem((*source))
		pDomainOrderItem = &domainOrderItem
	}
	return pDomainOrderItem
}
