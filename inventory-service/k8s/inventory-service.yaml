apiVersion: apps/v1
kind: Deployment
metadata:
  name: inventory-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: inventory-service
  template:
    metadata:
      labels:
        app: inventory-service
    spec:
      initContainers:
        - name: wait-for-inventory-db
          image: busybox
          command: ["/bin/sh", "-c"]
          args:
            - >
              echo "Waiting for inventory-service-db:5557...";
              until nc -z inventory-service-db 5557; do
                echo "DB not ready; retry in 5s...";
                sleep 5;
              done;
              echo "DB is up! Starting inventory-service...";
          resources:
            requests:
              cpu: "50m"
              memory: "64Mi"
            limits:
              cpu: "100m"
              memory: "128Mi"
      containers:
        - name: inventory-service
          image: docker.io/library/go-microservice-inventory-service:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 30051
          env:
            - name: DB_HOST
              value: "inventory-service-db"
            - name: DB_USER
              value: "devuser"
            - name: DB_PASS
              value: "devpass"
            - name: DB_PORT
              value: "5557"
            - name: DB_NAME
              value: "inventory_service"
            - name: DB_SCHEMA
              value: "public"
            - name: DB_SSLMODE
              value: "disable"
            - name: DB_DRIVER
              value: "postgres"
            - name: REPO_TYPE
              value: "gorm"
            - name: GRPC_PORT
              value: "30051"
            - name: HTTP_PORT
              value: "30052"
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "300m"
              memory: "512Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: inventory-service
spec:
  selector:
    app: inventory-service
  ports:
    - name: grpc
      port: 30051
      targetPort: 30051
    - name: http
      port: 30052
      targetPort: 30052
  type: ClusterIP
